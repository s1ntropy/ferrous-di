name: Security Audit

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run weekly on Sundays at 00:00 UTC
    - cron: '0 0 * * 0'

env:
  CARGO_TERM_COLOR: always

jobs:
  audit:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable

    - name: Cache cargo registry
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
        key: ${{ runner.os }}-audit-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-audit-

    - name: Install cargo-audit
      uses: taiki-e/install-action@cargo-audit

    - name: Run cargo audit
      run: cargo audit --json --output audit_results.json

    - name: Upload audit results
      uses: actions/upload-artifact@v4
      with:
        name: audit-results
        path: audit_results.json
        retention-days: 30

  license:
    name: License Check
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable

    - name: Install cargo-license
      run: cargo install cargo-license

    - name: Check licenses
      run: |
        echo "Checking dependency licenses..."
        cargo license --json > licenses.json
        
        # Verify we only have approved licenses
        if grep -E '"license": "GPL|AGPL|LGPL"' licenses.json; then
          echo "❌ Found copyleft licenses that may not be compatible"
          exit 1
        else
          echo "✅ All licenses appear compatible"
        fi
        
        # Generate human-readable report
        cargo license > LICENSE_REPORT.txt

    - name: Upload license report
      uses: actions/upload-artifact@v4
      with:
        name: license-report
        path: |
          licenses.json
          LICENSE_REPORT.txt
        retention-days: 30

  supply-chain:
    name: Supply Chain Security
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable

    - name: Install cargo-deny
      uses: taiki-e/install-action@cargo-deny

    - name: Check cargo-deny config exists
      run: |
        if [ ! -f deny.toml ]; then
          echo "No deny.toml found, creating minimal config"
          cargo deny init
        fi

    - name: Run cargo-deny
      run: cargo deny check

  # unused-deps:
  #   name: Unused Dependencies
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v4

  #   - name: Install Rust toolchain
  #     uses: dtolnay/rust-toolchain@nightly

  #   - name: Install cargo-udeps
  #     uses: taiki-e/install-action@cargo-udeps

  #   - name: Check for unused dependencies
  #     run: cargo +nightly udeps --all-targets